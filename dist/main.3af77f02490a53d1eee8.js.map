{"version":3,"file":"main.3af77f02490a53d1eee8.js","mappings":"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","sources":["webpack://weather/webpack/bootstrap","webpack://weather/webpack/runtime/global","webpack://weather/webpack/runtime/publicPath","webpack://weather/./src/js/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","import '../styles/scss/main.scss';\r\n\r\nimport summerDay from '../sounds/summer_day.mp3';\r\nimport summerRain from '../sounds/summer_rain.mp3';\r\nimport summerSky from '../sounds/summer_sky.mp3';\r\n\r\nimport winterDay from '../sounds/winter_day.mp3';\r\nimport winterRain from '../sounds/winter_snow.mp3';\r\nimport winterSky from '../sounds/winter_sky.mp3';\r\n\r\nimport springDay from '../sounds/spring-day.mp3';\r\nimport springRain from '../sounds/spring-rain.mp3';\r\nimport springSky from '../sounds/spring-sky.mp3';\r\n\r\nimport autumnDay from '../sounds/autumn_day.mp3';\r\nimport autumnRain from '../sounds/autumn_rain.mp3';\r\nimport autumnSky from '../sounds/autumn_sky.mp3';\r\n\r\n// –§–æ–Ω—ã\r\nimport summerImg from '../picturies/summer.jpg';\r\nimport winterImg from '../picturies/winter.jpg';\r\nimport autumnImg from '../picturies/autumn.jpg';\r\nimport springImg from '../picturies/spring.jpg';\r\n\r\nconst API_KEY = '4f88e5828fe24476bddb03ace0378f39';\r\nconst CITY = 'Moscow';\r\n\r\n// –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ç–∏–ø—ã –¥–ª—è –∫–∞—Ä—Ç—ã –∏ –æ—Ç–≤–µ—Ç–∞ –ø–æ–≥–æ–¥—ã\r\ntype WeatherCfg = { season: string; weather: string; icon: string };\r\ntype WeatherMap = Record<string, WeatherCfg>;\r\ninterface OWMResponse {\r\n  name: string;\r\n  main: { temp: number };\r\n  weather: { main: string }[];\r\n}\r\n\r\nconst weatherMap: WeatherMap = {\r\n  Clear: { season: 'summer', weather: 'day', icon: '‚òÄÔ∏è' },\r\n  Rain: { season: 'autumn', weather: 'rain', icon: 'üåßÔ∏è' },\r\n  Snow: { season: 'winter', weather: 'rain', icon: '‚ùÑÔ∏è' },\r\n  Clouds: { season: 'spring', weather: 'sky', icon: '‚òÅÔ∏è' }\r\n};\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  const weatherBtn = document.getElementById('weatherDemoBtn') as HTMLButtonElement | null;\r\n  const weatherBox = document.querySelector(\r\n    '.Current_weather_box_deactivated, .Current_weather_box_activated, .Current_weather_box_hidden'\r\n  ) as HTMLElement | null;\r\n\r\n  if (!weatherBtn || !weatherBox) return;\r\n\r\n  weatherBtn.addEventListener('click', async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${CITY}&appid=${API_KEY}&units=metric`\r\n      );\r\n      const data = (await response.json()) as OWMResponse;\r\n\r\n      const weatherType = data.weather[0].main as string;\r\n      const config = (weatherMap as Record<string, WeatherCfg>)[weatherType];\r\n\r\n      if (config) {\r\n        weatherBox.classList.remove('Current_weather_box_deactivated', 'Current_weather_box_hidden');\r\n        weatherBox.classList.add('Current_weather_box_activated');\r\n\r\n        (weatherBox.querySelector('.City_name') as HTMLElement).textContent = data.name;\r\n        (weatherBox.querySelector('.Temperature') as HTMLElement).textContent = `${Math.round(data.main.temp)}¬∞C`;\r\n        (weatherBox.querySelector('.Weather_icon') as HTMLElement).textContent = config.icon;\r\n\r\n        change(config.weather);\r\n\r\n        setTimeout(() => {\r\n          weatherBox.classList.add('Current_weather_box_hidden');\r\n          setTimeout(() => {\r\n            weatherBox.classList.remove('Current_weather_box_activated', 'Current_weather_box_hidden');\r\n            weatherBox.classList.add('Current_weather_box_deactivated');\r\n          }, 500);\r\n        }, 5000);\r\n      } else {\r\n        alert(`–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –ø–æ–≥–æ–¥–∞: ${weatherType}`);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É');\r\n    }\r\n  });\r\n\r\n  (weatherBox.querySelector('.Close_weather') as HTMLElement).addEventListener('click', () => {\r\n    weatherBox.classList.add('Current_weather_box_hidden');\r\n    setTimeout(() => {\r\n      weatherBox.classList.remove('Current_weather_box_activated', 'Current_weather_box_hidden');\r\n      weatherBox.classList.add('Current_weather_box_deactivated');\r\n    }, 500);\r\n  });\r\n});\r\n\r\nconst elementsMap: Array<{ main: string; entrance: string }> = [\r\n  { main: 'autumn', entrance: 'title_autumn' },\r\n  { main: 'winter', entrance: 'title_winter' },\r\n  { main: 'summer', entrance: 'title_summer' },\r\n  { main: 'spring', entrance: 'title_spring' }\r\n];\r\n\r\nconst volumeSlider = document.getElementById('volumeSlider') as HTMLInputElement;\r\nlet single: string | undefined;\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  const defaultWeather = document.getElementById('day') as HTMLElement;\r\n  defaultWeather.classList.add('active');\r\n  current.weather = 'day';\r\n});\r\n\r\ntype Season = 'summer' | 'spring' | 'autumn' | 'winter';\r\ntype SoundKind = 'day' | 'rain' | 'sky';\r\ntype Sounds = Record<Season, Record<SoundKind, HTMLAudioElement>>;\r\n\r\nconst sounds: Sounds = {\r\n  summer: {\r\n    day: new Audio(summerDay),\r\n    rain: new Audio(summerRain),\r\n    sky: new Audio(summerSky)\r\n  },\r\n  spring: {\r\n    day: new Audio(springDay),\r\n    rain: new Audio(springRain),\r\n    sky: new Audio(springSky)\r\n  },\r\n  autumn: {\r\n    day: new Audio(autumnDay),\r\n    rain: new Audio(autumnRain),\r\n    sky: new Audio(autumnSky)\r\n  },\r\n  winter: {\r\n    day: new Audio(winterDay),\r\n    rain: new Audio(winterRain),\r\n    sky: new Audio(winterSky)\r\n  }\r\n};\r\n\r\n// –æ—Å—Ç–∞–≤–ª–µ–Ω–æ 1:1 ‚Äî –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ª–æ–≥–∏–∫–∏\r\n(Object.values(sounds) as any).forEach((audio: any) => {\r\n  audio.loop = true;\r\n  audio.volume = 0.5;\r\n});\r\n\r\nlet current: { name: Season | null; isPlaying: boolean; weather?: SoundKind } = {\r\n  name: null,\r\n  isPlaying: false\r\n};\r\n\r\nfunction change(id: string): void {\r\n  document.querySelectorAll('.Swiper_slide_up').forEach(el => el.classList.remove('active'));\r\n\r\n  (document.getElementById(id) as HTMLElement).classList.add('active');\r\n\r\n  single = id;\r\n\r\n  if (current.name) {\r\n    const key = (current.weather || single) as SoundKind;\r\n    sounds[current.name][key]?.pause();\r\n    sounds[current.name][key].currentTime = 0;\r\n\r\n    magic(current.name);\r\n\r\n    current.weather = single as SoundKind;\r\n  } else {\r\n    console.log(`–ü–æ–≥–æ–¥–∞ –≤—ã–±—Ä–∞–Ω–∞: ${single}, –Ω–æ —Å–µ–∑–æ–Ω –ø–æ–∫–∞ –Ω–µ –∑–∞–¥–∞–Ω`);\r\n  }\r\n}\r\n\r\n// —ç–∫—Å–ø–æ—Ä—Ç –≤ –æ–∫–Ω–æ ‚Äî –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–≤–µ–¥–µ–Ω–∏—è\r\ndeclare global {\r\n  interface Window {\r\n    change: (id: string) => void;\r\n    magic: (id: string) => void;\r\n  }\r\n}\r\nwindow.change = change;\r\n\r\nfunction other(season: Season, bg: string, singl: string): void {\r\n  if (current.name && current.name !== season) {\r\n    (sounds[current.name][singl as SoundKind] as HTMLAudioElement).pause();\r\n    sounds[current.name][singl as SoundKind].currentTime = 0;\r\n  }\r\n\r\n  if (current.name === season && current.isPlaying) {\r\n    sounds[season][singl as SoundKind].pause();\r\n    current.isPlaying = false;\r\n  } else {\r\n    sounds[season][singl as SoundKind].play();\r\n    current = { name: season, isPlaying: true };\r\n    document.body.style.backgroundImage = `url('${bg}')`;\r\n  }\r\n}\r\n\r\nfunction magic(id: string): void {\r\n  const precipitation = (document.querySelector('.Swiper_slide_up.active') as HTMLElement).id;\r\n  single = precipitation;\r\n\r\n  const bgPaths: Record<string, string> = {\r\n    summer: summerImg,\r\n    winter: winterImg,\r\n    autumn: autumnImg,\r\n    spring: springImg\r\n  };\r\n\r\n  if (bgPaths[id]) {\r\n    other(id as Season, bgPaths[id], single);\r\n    console.log(`–í—Ä–µ–º—è –≥–æ–¥–∞: ${id}, —Ç—Ä–µ–∫: ${single}`);\r\n\r\n    elementsMap.forEach(item => {\r\n      const el = document.getElementById(item.entrance) as HTMLElement;\r\n      if (item.main === id) {\r\n        el.classList.add('Text_content_activated');\r\n        el.classList.remove('Text_content_deactivated');\r\n      } else {\r\n        el.classList.remove('Text_content_activated');\r\n        el.classList.add('Text_content_deactivated');\r\n      }\r\n    });\r\n  } else {\r\n    console.log('–¢–∞–∫–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –≥–æ–¥–∞ –Ω–µ—Ç');\r\n  }\r\n}\r\nwindow.magic = magic;\r\n\r\nvolumeSlider.addEventListener('input', () => {\r\n  if (current.name && single) {\r\n    // –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ª–æ–≥–∏–∫–∏ (—Å—Ç—Ä–æ–∫–∞ -> —á–∏—Å–ª–æ): –¥–µ–ª–∞–µ–º –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ —Ç–∏–ø–æ–≤\r\n    (sounds[current.name][single as SoundKind] as HTMLAudioElement).volume =\r\n      (volumeSlider.value as unknown as number);\r\n  }\r\n});"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","weatherMap","Clear","season","weather","icon","Rain","Snow","Clouds","addEventListener","weatherBtn","getElementById","weatherBox","querySelector","async","response","fetch","data","json","weatherType","main","config","classList","remove","add","textContent","name","Math","round","temp","change","setTimeout","alert","err","console","error","elementsMap","entrance","volumeSlider","single","current","sounds","summer","day","Audio","rain","sky","spring","autumn","winter","Object","values","forEach","audio","loop","volume","isPlaying","id","querySelectorAll","el","key","pause","currentTime","magic","log","precipitation","bgPaths","bg","singl","play","body","style","backgroundImage","item","value"],"sourceRoot":""}